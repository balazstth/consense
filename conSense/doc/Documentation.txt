<pre>
//////////////////////////////////////////////////////////////////////////////
// ConSense, RedSand and SimpleClasses by Toth, Balazs Aladar (c) 2005-2018
// Documentation
// v2.05
// https://aladar.me/
//////////////////////////////////////////////////////////////////////////////

//============================================================================
// CONTENTS
//============================================================================

General documentation
    About
    System requirements

Technical documentation
    Keyboard shortcuts
    Loading indicator
    Z-indexes
    RedSand windowlets

Coding conventions
    Special comments and versioning
    Style guide
    Java code style
    Indentation

License & Libraries
    ConSense MIT-like license
    Core third-party libraries
    Optional packages
    Even more optional packages


//============================================================================
// General documentation
//============================================================================

About
-----

ConSense: a (once :) comprehensive JavaScript debug console.
SimpleClasses: an essential, portable class set with cryptography, debug and
general utility functionality.
RedSand: a small, medium complexity client-side framework for web interfaces.

ConSense features various debug methods (see help() in the console), a one-liner
stub in your code, a keyboard shortcut to show it any time needed and other
useful services.

The use of SimpleClasses is a convenient ways to include the necessary basic
tools in your client-side code - from keyboard handling to a simplified
"markdown" language called liteDown. Also supports essentials like
Base 64, MD5, SHA1, RC4.

RedSand: an ultra-light middleware to create *really* fast portals. Covers
automatic internationalization, hierarchical user interface elements, iframe
loading.

System requirements
-------------------

2018:
ConSense should work well with all recent browsers.
In IE 11 load() support coughs, the debug console works flawlessly nevertheless.

Minimal requirements as of 2006 / legacy versions:
Mozilla Firefox 1.5
Microsoft Internet Explorer 6.0


//============================================================================
// Technical documentation
//============================================================================

Keyboard shortcuts
------------------

ConSense console visibility: Alt+Shift+K

Navigate to 10%, 20%... 90% of the page: Alt-1, Alt-2... Alt-9

Loading indicator
-----------------

redSandGenericLoader.indicate flag to toggle load indicator (spinner) display.

Z-indexes
---------

2.000.000.001 - ConSense console
2.000.000.000 - RedSandGenericLoader load indicator
1.999.999.999 - Input blocker
    1.000.000 - windowlets

RedSand windowlets
------------------

Windowlets are simple, optionally draggable, fixed-size containers. To create
one simply use the RedSandWindowlet() constructor. RedSandWindowletManager is
used automatically and invisibly.

Debug mode
----------

conSense.debug governs a couple of things. One of them is whether dynamically
loading files (text content, css, js, etc.) are forced to reload each time
from the server.
The other thing is whether conSense.debugLn() prints an output.


//============================================================================
// Coding conventions
//============================================================================

Special comments and versioning
-------------------------------

    Version number: [major version].[minor percentage]
                or: [major version].[minor version]

    *NAMING* comments indicate that special care should be taken in
    synchronizing JS names with HTLM element and CSS style names.

    *VALUES* acts like *NAMING* for numeric/string values.

    *STATIC* indicates statically programmed restrictions.

    *GLOBAL* stands for global definitions/references.

    *WORKAROUND* for special bug/feature avoiding solutions.

    *ENV* denotes reference to a JS "environment" variable.

    *DEPENDENCY* denotes dependency between classes.

    *WARNING* for cases of taking extreme caution by handling different
    elements
    
    Remark: to denote a point of interest.

Style guide
-----------

    //////////////////////////////////////////////////////////////////////////
    // Page width: 78 characters
    //////////////////////////////////////////////////////////////////////////

    function ExampleClass(constructorParameter)
    {
        this.constructorParameter = constructorParameter;

        this.field = "deadbeef";

        //--------------------------------------------------------------------
        // Methods
        //--------------------------------------------------------------------

        // ExampleClass
        this.aFunction = function(param0, param1)
        {
            var anArray = new Array();

            anArray.push(param0);
            anArray.push(param1);

            for (int i in anArray)
            {
                write(anArray(i));
            }
        }

        //--------------------------------------------------------------------

        // ExampleClass
        this.anotherFunction = function(...)
        {
            ...
        }
    }

Java code style
---------------

Is also valid.

    void someFunction() {
        // TODO
    }

Indentation
-----------

Using spaces, end-of-line whitespaces trimmed.


//============================================================================
// License & Libraries
//============================================================================

ConSense MIT-like license
-------------------------

Copyright (c) 2005-2018 Toth, Balazs Aladar (https://aladar.me/)

Permission  is  hereby granted, free of charge, to any person obtaining a copy
of  this software and associated documentation files (the "Software"), to deal
in  the  Software without restriction, including without limitation the rights
to  use,  copy,  modify,  merge,  publish, distribute, sublicense, and/or sell
copies  of  the  Software,  and  to  permit  persons  to  whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE  SOFTWARE  IS  PROVIDED  "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED,  INCLUDING  BUT  NOT  LIMITED  TO  THE WARRANTIES OF MERCHANTABILITY,
FITNESS  FOR  A  PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS  OR  COPYRIGHT  HOLDERS  BE  LIABLE  FOR  ANY  CLAIM, DAMAGES OR OTHER
LIABILITY,  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT  OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.


Core third-party libraries (full licenses are included in the source files)
--------------------------

md5 2.1                (c) Paul Johnston @ http://pajhome.org.uk/crypt/md5
sha1 2.1a              (c) Paul Johnston @ http://pajhome.org.uk/crypt/md5
dom-drag 10.28.2001    (c) Aaron Boodman @ http://www.aaronboodman.com/
DateFormat 2001        (c) David A. Lindquist @ http://www.gazingus.org
keydrown v1.2.2        (c) Jeremy Kahn @ http://jeremyckahn.github.com/keydrown
                           patched by me with key codes _0.._9
Lodash 4.17.10         (c) JS Foundation and other contributors
                           @ https://js.foundation/

Optional packages, these are already loaded by the ConSense stub
-----------------

SortTable version 2  (c) Stuart Langridge,
                         @ http://www.kryogenix.org/code/browser/sorttable/
// jQuery replacement
Cash 1.0.0           (c) Ken Wheeler @ http://kenwheeler.github.io/cash/
Dragula              (c) Nicol√°s Bevacqua
                         @ https://bevacqua.github.io/dragula/

Even more optional packages, not loaded by the stub. Include them via
---------------------------  load("...js") at runtime from the lib/_optional
                             folder, or if necessary include stylesheets in the
                             document header.
                             
bulma.io v0.7.1      (c) Jeremy Thomas @ https://github.com/jgthms/bulma
// Full text search
lunr 2.3.3           (c) Oliver Nightingale @ http://lunrjs.com
// Animation library
Velocity 1.0.0       (c) Julian Shapiro @ http://velocityjs.org/
// Music players, wave and mods
howler.js v2.0.15    (c) James Simpson of GoldFire Studios
                           @ https://goldfirestudios.com
chiptune2.js         (c) The chiptune2.js contributers
                           @ https://github.com/deskjet/chiptune2.js/
// Game programming library
Phaser 3.14.0        (c) Photon Storm Ltd. @ http://phaser.io/

//============================================================================
</pre>
